name: Build and Deploy to mr17dom1

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  build:
    name: Build And Deploy
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: build with gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar

      - name: yandex cloud container registry Login
        uses: yc-actions/yc-cr-login@v1.2.0
        with:
          yc-sa-json-credentials: ${{ secrets.YC_CR_SA_JSON_CREDENTIALS }}

      - name: build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{ vars.YC_CR_REGISTRY_ID }}
          CR_REPOSITORY: housekeeper
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: create env variables file for Docker
        run: |
          echo "CONTAINER_REGISTRY=cr.yandex/${{ vars.YC_CR_REGISTRY_ID }}" > .env
          echo "TAG=${{ github.sha }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_URL=${{ secrets.MR17_POSTGRES_URL}}" >> .env
          echo "MAIL_HOST=${{ secrets.MAIL_HOST}}" >> .env
          echo "MAIL_USER_NAME=${{ secrets.MAIL_USER_NAME}}" >> .env
          echo "MAIL_USER_PASSWORD=${{ secrets.MAIL_USER_PASSWORD}}" >> .env
          echo "MY_INN=${{ secrets.MY_INN}}" >> .env
          echo "MY_NAME=${{ secrets.MY_NAME}}" >> .env
          echo "MY_ACCOUNT=${{ secrets.MY_ACCOUNT}}" >> .env
          echo "AUTH_TOKEN_KEY=${{ secrets.AUTH_TOKEN_KEY }}" >> .env

      - name: copy files to host
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.MR17_HOST_IP }}
          username: ${{ secrets.MR17_HOST_USERNAME }}
          key: ${{ secrets.MR17_HOST_KEY }}
          source: ".env, docker-compose.yml"
          target: ${{ secrets.MR17_HOST_PROJECT_PATH }}

      - name: docker pull && up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MR17_HOST_IP }}
          username: ${{ secrets.MR17_HOST_USERNAME }}
          key: ${{ secrets.MR17_HOST_KEY }}
          script: |
            echo ${{ secrets.YA_OAUTH }} |docker login --username oauth --password-stdin cr.yandex
            cd ${{ secrets.MR17_HOST_PROJECT_PATH }}
            docker compose pull
            docker compose up -d
            docker logout cr.yandex